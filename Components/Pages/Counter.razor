@page "/counter"
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>


<button class="btn btn-primary" @onclick="IncrementCount">Increment</button>



@*
<div class="m-4">
    <input type="text" @onfocus="HandleFocus" @onblur="HandleBlur" />
    <p>@text</p>
</div>
*@

<div style="border: 1px solid black;" @onmouseover="MouseOver">
    <p>@divText</p>

</div>

<div class="m-4">
    <input type="text" @bind="text" @bind:event="oninput" @bind:after="Search"/>

    <p>@text</p>
</div>
<p>@result</p>

@code {
    private int currentCount = 0;

    string text = "";
    string divText = "";
    string result = "";
  
    [Parameter]
    public int IncrementAmount { get; set; } = 1;

    private void IncrementCount()
    {
        currentCount += IncrementAmount;
    }
    private void HandleInput(ChangeEventArgs e)
    {
        text = (string)e.Value!;
    }
    private void MouseOver(MouseEventArgs e)
    {
        divText = $"Mouse over at X: {e.ClientX}, Y: {e.ClientY}";
    }

    private void HandleKeyDown(KeyboardEventArgs e)
    {
        text = $"Key pressed: {e.Key}";
    }

    private void HandleFocus(FocusEventArgs e)
    {
        text = "you are typing ...";
    }

    private void HandleBlur(FocusEventArgs e)
    { 
        text = "you are not typing ...";
    }   

   async Task Search()
    {
        // Simulate a search operation
        await Task.Delay(500); // Simulate a delay for the search operation
        result = $"Searching for: {text}";
    }
}